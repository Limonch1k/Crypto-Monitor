// <auto-generated />
using System;
using DataAccessLayer.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(CryptaContext))]
    [Migration("20220321174233_SomeUpdates")]
    partial class SomeUpdates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccessLayer.Model.Crypta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Crypta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cost = 100.0,
                            Name = "Bitcoin"
                        },
                        new
                        {
                            Id = 2,
                            Cost = 200.0,
                            Name = "Effir"
                        },
                        new
                        {
                            Id = 3,
                            Cost = 300.0,
                            Name = "Doggicoin"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.ExpectedCost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("CryptaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CryptaId");

                    b.HasIndex("UserId");

                    b.ToTable("ExpectedCost");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<int>("CryptaId")
                        .HasColumnType("int");

                    b.Property<double>("Money")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CryptaId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20,
                            Name = "Dima"
                        },
                        new
                        {
                            Id = 2,
                            Age = 20,
                            Name = "Danick"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Model.ExpectedCost", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Crypta", "Crypta")
                        .WithMany("ExpectedCosts")
                        .HasForeignKey("CryptaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("ExpectedCosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crypta");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Order", b =>
                {
                    b.HasOne("DataAccessLayer.Model.Crypta", "Crypta")
                        .WithMany("Orders")
                        .HasForeignKey("CryptaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crypta");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataAccessLayer.Model.Crypta", b =>
                {
                    b.Navigation("ExpectedCosts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DataAccessLayer.Model.User", b =>
                {
                    b.Navigation("ExpectedCosts");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
